#!/usr/bin/env python3
# -*- coding: utf-8 -*-
'''
@date: 2023-08-11
@author: Shell.Xu
@copyright: 2023, Shell.Xu <shell909090@gmail.com>
@license: BSD-3-clause
'''
import sys
import json
import argparse

import git
import semver


def load_tag_map(repo):
    global tag_map
    tag_map = {}
    for tag in repo.tags:
        if semver.Version.is_valid(tag.name):
            tag_map[tag.commit] = tag.name


def search(ci, path):
    while True:
        path.append(ci)

        if ci in tag_map:
            yield tag_map[ci], path
            return

        if len(ci.parents) == 1:
            ci = ci.parents[0]

        elif len(ci.parents) > 1:
            for p in ci.parents:
                yield from search(p, path[:])
            return

        elif len(ci.parents) == 0:
            yield '0.0.0', path
            return


def main():
    global args
    parser = argparse.ArgumentParser()
    parser.add_argument('--tag-name', '-tn', action='store_true', help='print the name of tag.')
    parser.add_argument('--tag-id', '-ti', action='store_true', help='print the id of tag.')
    parser.add_argument('--tag-messages', '-tm', action='store_true', help='print the head of messages in the path.')
    parser.add_argument('--tag-json', '-tj', action='store_true', help='print the json.')
    parser.add_argument('--bump-major', '-bM', action='store_true', help='print a tag bumped major.')
    parser.add_argument('--bump-minor', '-bm', action='store_true', help='print a tag bumped minor.')
    parser.add_argument('--bump-patch', '-bp', action='store_true', help='print a tag bumped patch.')
    parser.add_argument('--release-candidate', '-rc', action='store_true', help='print a release candidate tag.')
    parser.add_argument('rest', nargs='*', type=str)
    args = parser.parse_args()

    global repo
    repo = git.Repo()

    load_tag_map(repo)

    pathes = list(search(repo.head.commit, []))
    tag, path = max(pathes, key=lambda x: semver.Version.parse(x[0]))
    msgs = [ci.message.splitlines()[0] for ci in path[:-1]]

    if args.tag_name:
        print(tag)
    elif args.tag_id:
        print(path[-1])
    elif args.tag_messages:
        print('\n'.join(msgs))
    elif args.tag_json:
        print(json.dumps({
            'commit': path[-1].hexsha,
            'tag': tag,
            'messages': msgs,
        }))

    elif args.bump_major:
        print(semver.Version.parse(tag).bump_major())
    elif args.bump_minor:
        print(semver.Version.parse(tag).bump_minor())
    elif args.bump_patch:
        print(semver.Version.parse(tag).bump_patch())
    elif args.release_candidate:
        print(f'{semver.Version.parse(tag).bump_patch()}-rc{len(path)-1}.{path[-1].hexsha[:7]}')


if __name__ == '__main__':
    main()

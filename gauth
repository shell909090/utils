#!/usr/bin/python3
# -*- coding: utf-8 -*-
'''
@date: 2015-09-25
@author: Shell.Xu
@copyright: 2015, Shell.Xu <shell909090@gmail.com>
@license: BSD-3-clause
'''
import sys
import time
import hmac
import base64
import struct
import hashlib
import argparse


def calotp(secret):
    secret = base64.b32decode(secret)
    message = struct.pack('>Q', int(time.time() / 30))
    h = hmac.new(secret, message, hashlib.sha1).digest()
    offset = ord(h[-1]) & 0x0f
    number = struct.unpack('>I', h[offset: offset+4])[0]
    return '%06d' % ((number & 0x7fffffff) % 1000000)


def main():
    parser = argparse.ArgumentParser(description=main.__doc__)
    parser.add_argument('rest', nargs='*', type=str)
    args = parser.parse_args()

    if not args.rest:
        for sec in args.rest:
            print(calotp(sec))
    else:
        for line in sys.stdin:
            print(calotp(line.strip()))


if __name__ == '__main__':
    main()
